behavior:
  body:
    roles:
      - "goalie"
      - "offense"
      - "defense"
      - "penalty"

    # When False, the behavior will use a simple fallback mode in which only detected image features are
    # used for decision making
    use_localization: true

    # Position format:
    #      y
    #      ^       ______________________
    #      |    M  |          |          |  O
    #      |    Y  |_ -x, y   |   x, y  _|  P
    #      |    G  | |        |        | |  P
    # 0    +    O  | |       ( )       | |  G
    #      |    A  |_|        |        |_|  O
    #      |    L  |  -x,-y   |   x,-y   |  A
    #      |       |__________|__________|  L
    #      |
    #      +------------------+--------------> x
    #                         0
    # To be useful for different field sizes, use values in [-1, 1] for x and y

    # TODO: For four robots we need four initial positions
    role_positions:
      goalie: [-0.95, 0]
      defense: [[-0.5, 0], [-0.45, 0.5], [-0.45, -0.5]]
      offense: [[-0.25, 0], [-0.2, 0.5], [-0.2, -0.5]]
      # position number 0 = center, 1 = left, 2 = right
      pos_number: 0

    # When the ball has not been seen for `ball_lost_time` seconds,
    # it is considered lost and will be searched
    ball_lost_time: 15

    # The orientation threshold defining which range (in Degrees) is acceptable as aligned to the goal (in each direction)
    goal_alignment_orientation_threshold: 20

    # When the goal has not been seen for `goal_lost_time` seconds,
    # it is considered lost and will be searched
    goal_lost_time: 30


    # When the ball is closer than `ball_close_distance` meters
    # it is in a reachable area of the robot
    ball_close_distance: 1.5

    # An area in which the ball can be kicked with the right foot
    # defined by min/max x/y values in meters which represent ball positions relative to base_footprint
    # http://www.ros.org/reps/rep-0103.html#axis-orientation
    right_kick_min_x: 0
    right_kick_min_y: -0.15
    right_kick_max_x: 0.3
    right_kick_max_y: 0

    # An area in which the ball can be kicked with the left foot
    # defined by min/max x/y values in meters which represent ball positions relative to base_footprint
    # http://www.ros.org/reps/rep-0103.html#axis-orientation
    left_kick_min_x: 0
    left_kick_min_y: 0
    left_kick_max_x: 0.3
    left_kick_max_y: 0.15

    # defines the radius around the goal (in form of a box)
    # in this area, the goalie will react to the ball.
    # the radius is the margin around the goal to both y and the positive x directions
    ball_dangerous_goal_radius: 2

    # The defensive area is an area in which the players behave more defensive then usual
    # (defensive players are actively going to the ball and goalies move in the goal to be able to block the ball).
    # This affects the BallInDefensiveArea decision.
    # The area is described as portion of the field [0, 1] always measured from the own goal.
    # A value of 0.25 means, that the quarter in front of the own goal is the defensive area.
    defensive_area: 0.25

    # This is the offset the goalie keeps to avoid crashes with poles when blocking balls.
    # The value describes the offset in meters from the goal line.
    block_position_goal_offset: 0.15

    # this factor defines how extreme the goalie reacts to a ball offset
    block_position_gradient_factor: 4

    # When the ball is closer than `max_kick_distance` meters
    # it is close enough to be kicked
    max_kick_distance: 0.3

    # configurations for the use of bitbots_dynamic_kick package
    dynamic_kick:
      # time to wait for a dynamic_kick server
      wait_time: 10
      # base topic under which an actionserver listens for KickAction messages
      topic: "/dynamic_kick"

    # the maximal allowed standard deviation of the localization pose.
    pose_precision_threshold:
      x_sdev: 0.3
      y_sdev: 0.3
      theta_sdev: 0.1

    # maximum amount of time after which a localization pose is dropped.
    # (This should not happen unless the localization has died. RIP in this case.)
    pose_lost_time: 10

    # Duration for which the robot tries to orient itself, when the localization precision is low.
    reorientation_duration: 10

    # Duration for which the robot pauses between reorientation runs.
    reorientation_pause_duration: 30

role: "offense"
